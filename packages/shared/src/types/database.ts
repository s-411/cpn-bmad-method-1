// Database types for CPN App
// These types match the Supabase database schema exactly

export interface User {
  id: string;
  email: string;
  subscription_tier: 'boyfriend' | 'player' | 'lifetime';
  subscription_status: 'active' | 'cancelled' | 'expired';
  stripe_customer_id?: string;
  profile_settings?: UserProfileSettings;
  datetime_settings?: DateTimeSettings;
  notification_settings?: NotificationSettings;
  privacy_settings?: PrivacySettings;
  created_at: string;
  updated_at: string;
}

export interface UserProfileSettings {
  displayName: string;
  avatarUrl?: string;
  accountCreated?: string;
  lastLogin?: string;
}

export interface DateTimeSettings {
  dateFormat: string;
  timeFormat: '12h' | '24h';
  weekStart: 'sunday' | 'monday';
}

export interface NotificationSettings {
  leaderboardUpdates: boolean;
  achievementAlerts: boolean;
  weeklyReports: boolean;
  monthlyReports: boolean;
  dataReminders: boolean;
}

export interface PrivacySettings {
  leaderboardVisible: boolean;
  shareStats: boolean;
  shareAchievements: boolean;
  profileDiscoverable: boolean;
  anonymousMode: boolean;
}

export interface Girl {
  id: string;
  user_id: string;
  name: string;
  age: number;
  rating: number;
  ethnicity?: string;
  hair_color?: string;
  location_city?: string;
  location_country?: string;
  nationality?: string; // Backward compatibility
  is_active: boolean;
  created_at: string;
  updated_at: string;
}

export interface DataEntry {
  id: string;
  user_id: string;
  girl_id: string;
  date: string;
  amount_spent: number;
  duration_minutes: number;
  number_of_nuts: number;
  created_at: string;
  updated_at: string;
}

export interface OnboardingSession {
  id: string;
  session_token: string;
  girl_data?: any; // JSONB - partial girl data
  data_entries?: any[]; // JSONB array - partial data entries
  expires_at: string;
  created_at: string;
}

export interface LeaderboardGroup {
  id: string;
  user_id: string;
  name: string;
  created_by: string;
  invite_token: string;
  is_private: boolean;
  member_count: number;
  created_at: string;
  updated_at: string;
}

export interface LeaderboardMember {
  id: string;
  group_id: string;
  user_id: string;
  username: string;
  stats: LeaderboardStats;
  joined_at: string;
  created_at: string;
  updated_at: string;
}

export interface LeaderboardStats {
  totalSpent: number;
  totalNuts: number;
  costPerNut: number;
  totalTime: number; // in minutes
  totalGirls: number;
  efficiency: number; // calculated ranking metric
}

// Calculated metrics interface
export interface GirlMetrics {
  total_spent: number;
  total_nuts: number;
  total_minutes: number;
  cost_per_nut: number;
  time_per_nut: number;
  entry_count: number;
}

// Combined interface for API responses
export interface GirlWithMetrics extends Girl {
  metrics?: GirlMetrics;
}

// Database function return types
export interface CalculateGirlMetricsResult {
  total_spent: number;
  total_nuts: number;
  total_minutes: number;
  cost_per_nut: number;
  time_per_nut: number;
  entry_count: number;
}

export interface GetGirlsWithMetricsResult extends Girl {
  total_spent: number;
  total_nuts: number;
  total_minutes: number;
  cost_per_nut: number;
  time_per_nut: number;
  entry_count: number;
}

// Supabase Database type (will be generated by Supabase CLI)
export interface Database {
  public: {
    Tables: {
      users: {
        Row: User;
        Insert: Omit<User, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<User, 'id' | 'created_at' | 'updated_at'>>;
      };
      girls: {
        Row: Girl;
        Insert: Omit<Girl, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<Girl, 'id' | 'user_id' | 'created_at' | 'updated_at'>>;
      };
      data_entries: {
        Row: DataEntry;
        Insert: Omit<DataEntry, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<DataEntry, 'id' | 'user_id' | 'created_at' | 'updated_at'>>;
      };
      onboarding_sessions: {
        Row: OnboardingSession;
        Insert: Omit<OnboardingSession, 'id' | 'created_at'>;
        Update: Partial<Omit<OnboardingSession, 'id' | 'created_at'>>;
      };
    };
    Views: {
      [_ in never]: never;
    };
    Functions: {
      calculate_girl_metrics: {
        Args: { girl_uuid: string };
        Returns: CalculateGirlMetricsResult[];
      };
      get_girls_with_metrics: {
        Args: { user_uuid: string };
        Returns: GetGirlsWithMetricsResult[];
      };
      migrate_onboarding_session: {
        Args: { session_token: string; target_user_id: string };
        Returns: boolean;
      };
      cleanup_expired_sessions: {
        Args: {};
        Returns: void;
      };
    };
    Enums: {
      [_ in never]: never;
    };
  };
}